# espanso configuration file

# This is the default configuration file, change it as you like it
# You can refer to the official documentation:
# https://espanso.org/docs/

# Matches are the substitution rules, when you type the "trigger" string
# it gets replaced by the "replace" string.
matches:
  # Simple text replacement
  #- trigger: ":espanso"
  #  replace: "Hi there!"

  # Dates
  - trigger: ":date"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%m/%d/%Y"

  - trigger: ":bd"
    replace: "{{mydate}}"
    vars:
      - name: mydate
        type: date
        params:
          format: "%F"

  # Shell commands
  - trigger: ":shell"
    replace: "{{output}}"
    vars:
      - name: output
        type: shell
        params:
          cmd: "echo Hello from your shell"

# Custom Replacements

#:mdtag is used to quickly create a tag notation for Zettlekasten in code blocks.
  - trigger: ":mdtag"
    replace: "`#$|$`"

#:t is a short version of mdtag
  - trigger: ":t"
    replace: "`#$|$`"

#fun stuff
  - trigger: ":dance"
    replace: "`ᕕ(⌐■_■)ᕗ ♪♬`"

  - trigger: ":flip"
    replace: "`(╯°□°）╯︵ ┻━┻`"

  - trigger: ":nice"
    replace: "𝓷𝓲𝓬𝓮 ☜(ﾟヮﾟ☜)"

#new note template for your Zettlekasten
  - trigger: ":nn"
    replace: "# Title\n{{date}}  \nContent goes here\n\n## Tags\n\n## Links \n\n### ID\n{{id}}"
    vars:
      - name: date
        type: match
        params:
          trigger: ":date"
      - name: id
        type: match
        params:
          trigger: ":id"

#time in 0H:0M notation
  - trigger: ":now"
    replace: "{{time}}  "
    vars:
      - name: time
        type: date
        params:
          format: "%R"

#id creates a timestamp for unique ids in notes like Zettlr - handy for other apps that don't include that functionality
  - trigger: ":id"
    replace: "{{time}}  "
    vars:
      - name: time
        type: date
        params:
          format: "%Y%m%d%H%M%S"

#cf creates a code fence - enclosed three `'s for Zettlr use
  - trigger: ":cf"
    replace: "```\n$|$\n```"
